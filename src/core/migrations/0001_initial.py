# Generated by Django 5.2.7 on 2025-10-29 04:01

import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Configuration',
            fields=[
                ('id', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('value', models.CharField(verbose_name='Valor')),
                ('id_group', models.CharField(max_length=100, verbose_name='Grupo')),
                ('is_delete', models.BooleanField()),
            ],
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('phone_number', models.CharField(blank=True, max_length=100, verbose_name='Número de teléfono')),
            ],
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=250, verbose_name='Nombres')),
                ('last_name', models.IntegerField(verbose_name='Apellidos')),
                ('document_number', models.IntegerField(verbose_name='Número de documento')),
                ('document_type', models.CharField(choices=[('M', 'Masculino'), ('F', 'Femenino')], default='ID_CARD', max_length=10, verbose_name='Tipo de documento')),
                ('birth_date', models.DateField()),
                ('sexo', models.CharField(choices=[('ID_CARD', 'Cédula'), ('DNI', 'DNI'), ('PASSPORT', 'Pasaporte')], default='M', max_length=10, verbose_name='sexo')),
            ],
        ),
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('main_street', models.CharField(max_length=250, verbose_name='Calle principal')),
                ('secondary_stret', models.CharField(max_length=250, verbose_name='Calle secundaria')),
                ('reference', models.CharField(max_length=250, verbose_name='Referencia')),
                ('addrress_number', models.CharField(max_length=50, verbose_name='Número de domicilio')),
                ('city', models.CharField(max_length=250, verbose_name='Ciudad')),
                ('country', models.CharField(max_length=250, verbose_name='Pais')),
                ('province', models.CharField(max_length=250, verbose_name='Provincia')),
                ('contact', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.contact')),
            ],
        ),
        migrations.AddField(
            model_name='contact',
            name='person',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.person'),
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('username', models.CharField(max_length=50, unique=True)),
                ('rol', models.CharField(choices=[('patient', 'Paciente'), ('doctor', 'Médico'), ('admin', 'Administrador')], max_length=30)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
                ('person', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user', to='core.person')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
